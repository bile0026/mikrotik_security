---
# tasks for meris vulnerability remediation

- name: Meris - Disable socks and set port to 1080
  community.routeros.command:
    commands:
      - /ip socks set enabled=no
      - /ip socks set port=1080
  register: meris_socks_remediation
  when: "'yes' in {{(meris_socks_check.stdout[0]  | regex_search('enabled: ([a-z]{2,3})', '\\1'))}}"

- name: Meris - Remove Mikrotik.php files
  community.routeros.command:
    commands:
      - >
        :foreach i in=[/file find name~".*[Mm]ikrotik\\.php.*"] do={
          /file remove $i
        }
  register: meris_file_remediation
  when: "'possible breach file' in {{(meris_file_check.stdout[0] | regex_search('([a-z]{8} breach file)$', '\\1'))}}"

- name: Meris - Remove Mikrotik.php scripts
  community.routeros.command:
    commands:
      - >
        :foreach i in=[/system script find source~".*[Mm]ikrotik\\.php.*"] do={
          /system script remove $i
        }
  register: meris_script_remediation
  when: "'possible breach script' in {{ (meris_script_check.stdout[0]  | regex_search('([a-z]{8} breach script)$', '\\1')) }}"

- name: Meris - Remove Mikrotik.php schedule
  community.routeros.command:
    commands:
      - >
        :foreach i in=[/system scheduler find on-event~".*[Mm]ikrotik\\.php.*"] do={
          /system scheduler remove $i
        }
  register: meris_schedule_remediation
  when: "'possible breach schedule' in {{ (meris_schedule_check.stdout[0]  | regex_search('([a-z]{8} breach schedule)$', '\\1')) }}"

- name: Meris - Remove unauthorized users
  community.routeros.command:
    commands:
      - >
        :foreach i in=[/user find name~".*service.*"] do={
          /user remove $i
        }
  register: meris_user_remediation
  when: "'possible breach user' in {{ meris_user_check.stdout[0]  | regex_search('([a-z]{8} breach user)$', '\\1')) }}"
