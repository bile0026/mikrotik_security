---
# tasks for meris vulneratiblity assertions

- name: Re-Check socks status
  community.routeros.command:
    commands:
      - /ip socks print
  register: socks_recheck

- name: Re-Check for Mikrotik.php file
  community.routeros.command:
    commands:
      #- ":if ([:len [/file find name~'.*[Mm]ikrotik\\.php.*']] >= 1) do={:put 'found'}"
      #- /file [ where name~".*[Mm]ikrotik\.php.*" ]
      #- /file find where name=mikrotik.php
      - >
        :if ([:len [/file find name~".*[Mm]ikrotik\\.php.*"]] >= 1) do={
          :put "possible breach file"
        } else={ :put "notfound breach file"}
  register: file_recheck

- set_fact:
    regex: "{{ file_recheck.stdout[0]  | regex_search('([a-z]{8} breach file)$', '\\1') }}"

- debug: var=regex

- name: Assert socks is disabled
  assert:
    that: "'no' in {{ (socks_recheck.stdout[0]  | regex_search('enabled: ([a-z].)', '\\1')) }}"
    success_msg: "Congratulations, socks is disabled. This is good!"
    fail_msg: "***DANGER*** socks is enabled, if you have not done this on purpose your system may be compromised."

- name: Assert no mikrotik.php file found on device
  assert:
    that: "'possible breach file' not in {{ (file_recheck.stdout[0]  | regex_search('([a-z]{8} breach file)$', '\\1')) }}"
    success_msg: "Congratulations, No mikrotik.php file found. This is good!"
    fail_msg: "***DANGER*** mikrotik.php file found, if you have not done this on purpose your system may be compromised."
