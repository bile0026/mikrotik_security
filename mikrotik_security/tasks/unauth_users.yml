---
# tasks for checking unauthorized users

- name: Unauth_users - Get list of users
  community.routeros.command:
    commands:
      - /user print
  register: unauth_user_check

#- debug: var=unauth_user_check.stdout_lines[0]

- name: Unauth_users - Build list of current users
  set_fact:
    tmp_users: "{{ tmp_users + [ current_line | regex_search('^ *[0-9]{1,2} {1,5}([a-zA-Z0-9-_@+]{1,25}).*$', '\\1', multiline=True) ] | flatten }}"
  loop: "{{ unauth_user_check.stdout_lines[0] }}"
  loop_control:
    loop_var: current_line
  no_log: true

- name: Unauth_users - Generate list of unauthorized users
  set_fact:
    unauthorized_users: "{{ tmp_users | difference( authorized_users ) }}"

- name: Unauth_users - Include remediation tasks if requested
  include_tasks: "unauth_users_remediation.yml"
  when:
    - remediate
    - unauthorized_users | length > 0

- name: Unauth_users - Include Assertion tasks to verify results
  include_tasks: "unauth_users_assertions.yml"
